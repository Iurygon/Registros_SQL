/*CHECKS SÃO RESTRIÇÕES QUE PODEM SER COLOCADAS EM UMA TABELA PARA IMPEDIR A INSERÇÃO DE VALORES INDESEJADOS. É UM BLOQUEIO QUE CRIA UMA CONDIÇÃO QUE
PRECISA SER SATISFEITA PARA QUE AQUELE COMANDO DE INSERÇÃO DE DADOS SEJA ACEITO.
POR EXEMPLO, VAMOS CRIAR UMA TABELA DE TESTE QUE RECEBE DADOS DE UM CLIENTE EM UMA BALADA. ESSES DADOS SÃO O NOME, IDADE, CIDADE, ALÉM DE TER UM ID
ÚNICO PARA CADA CLIENTE. PORÉM, HÁ UMA CONDIÇÃO: PARA QUE OS CLIENTES TENHAM ACESSO À BALADA, NA FILIAL DO RIO DE JANEIRO, É NECESSÁRIO TER MAIS DE 18
ANOS, JÁ NA FILIAL DE SÃO PAULO, PRECISA TER APENAS 16.*/

CREATE TABLE TAB_CHECK
(
ID INT NOT NULL,
NOME VARCHAR(50) NULL,
IDADE INT NULL,
CIDADE VARCHAR(50) NULL,
CONSTRAINT CHK_IDADE CHECK ((IDADE >= 18 AND CIDADE = 'Rio de Janeiro') OR (IDADE >= 16 AND CIDADE = 'São Paulo'))
)
/*CONSTRAINT:	COMO JÁ SABEMOS, CRIA UMA LIMITAÇÃO NA TABELA
CHK_IDADE:		É O NOME DADO AO CHECK QUE CRIAMOS
CHECK:			JUSTAMENTE DEFINE QUE UM CHECK ESTÁ SENDO CRIADO, INFORMANDO SUAS CONDIÇÕES.
*/

INSERT INTO TAB_CHECK VALUES
(0001, 'Iury Gontijo Silva', 20, 'Rio de Janeiro') --ESTE COMANDO É ACEITO JÁ QUE SATISFAZ A NOSSA CONDIÇÃO

INSERT INTO TAB_CHECK VALUES
(0002, 'João Carlos Maciel', 16, 'Rio de Janeiro') --TENTANDO RODAR ESSE COMANDO, TEMOS UM ERRO, JÁ QUE NÃO SATISFAZ A CONDIÇÃO

INSERT INTO TAB_CHECK VALUES
(0002, 'João Carlos Maciel', 16, 'São Paulo') --MAS SE MUDARMOS A CIDADE PARA SÃO PAULO, JÁ É POSSÍVEL EXECUTAR TRANQUILAMENTE