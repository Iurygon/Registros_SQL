/*O LEFT JOIN É SEMELHANTE AO INNER JOIN, PORÉM RETORNA TODA A TABELA DA ESQUERDA, QUE É PASSADA ANTES DO JOIN, E SOMENTE OS VALORES
QUE CORRESPONDEM DA TABELA DA DIREITA, PASSADA DEPOIS DO JOIN. CASO UM VALOR ESTEJA NA ERQUERDA E NÃO NA DIREITA, O VALOR APRESENTADO
NA DIREITA SERÁ NULL, MAS CASO APAREÇA NA DIREITA E NÃO NA ESQUERDA, NÃO SERÁ APRESENTADO.

O RIGHT JOIN É O INVERSO, APRESENTANDO TODOS OS VALORES DA TABELA DA DIREITA E SOMENTE SEUS CORRESPONDENTES DA TABELA DA ESQUERDA.
CASO ALGUM VALOR NÃO TENHA SEU CORRESPONDENTE NA TABELA DA ESQUERDA, TAMBÉM APRESENTARÁ NULL, ASSIM COMO NO LEFT JOIN. AMBOS OS TIPOS
DE JOIN RETORNAM A TABELA INTEIRA JUNTO DA INTERSEÇÃO DA OUTRA.

E TAMBÉM TEMOS O FULL JOIN, QUE TRAZ A UNIÃO DAS TABELAS PASSADAS. OS VALORES QUE TIVEREM CORRESPONDÊNCIA SERÃO APRESENTADOS, LOGICA_
MENTE, ENQUANTO QUE OS VALORES QUE NÃO POSSUEM CORRESPONDÊNCIA APRESENTARÃO NULL.

POR FIM, TEMOS O CROSS JOIN, QUE FAZ A JUNÇÃO DE CADA ELEMENTO DE UMA TABELA COM CADA ELEMENTO DA OUTRA, INDEPENDENTE SE HÁ CORRESPON_
DÊNCIA OU NÃO. NESSE CASO, O JOIN É FEITO SEM O USO DA CLÁUSULA 'ON', QUE SE TORNA DESNESSÁRIA JÁ QUE NÃO IMPORTANTA QUAL CAMPO ENTRE
AS TABELAS CORRESPONDEM.
*/

/*USANDO ESSAS CONSULTAS CONSEGUIMOS VER QUE CADA CLIENTE POSSUI PELO MENOS UMA COMPRA FEITA, JÁ QUE TEMOS UM TOTAL DE 15 CLIENTES
E 15 RESULTADOS DISTINTOS NA CONSULTA DE CPF NA NOTA. NESSE CASO, O INNER JOIN VAI FUNCIONAR PERFEITAMENTE*/
SELECT COUNT(*) FROM TABELA_DE_CLIENTES;

SELECT DISTINCT

	TC.CPF		AS		CPF_CLIENTE,
	TC.NOME		AS		NOME_CLIENTE,
	NF.CPF		AS		CPF_NA_NOTA

FROM TABELA_DE_CLIENTES TC
INNER JOIN NOTAS_FISCAIS NF
ON TC.CPF = NF.CPF;

-- MAS E SE FIZERMOS UMA INCLUSÃO DE CLIENTE NA TABELA DE CLIENTES E NÃO FIZEMOS UMA INCLUSÃO DE COMPRA PARA ELE?
INSERT INTO TABELA_DE_CLIENTES
(CPF, NOME, ENDERECO_1, ENDERECO_2, BAIRRO, CIDADE, ESTADO, CEP, DATA_DE_NASCIMENTO, IDADE, GENERO, LIMITE_DE_CREDITO, 
VOLUME_DE_COMPRA, PRIMEIRA_COMPRA)
VALUES
('14273350602', 'Iury Gontijo Silva', 'R. Eduardo Pinto Ribeiro', '', 'Bangu', 'Rio de Janeiro', 'RJ', '23400000', '2003-08-10',
'20', 'M', '100000', '23400', 0);

/*SE EXECUTARMOS AS CONSULTAS DE NOVO, VAMOS TER UM TOTAL DE 16 CLIENTES E 15 COMPRAS FEITAS. QUANDO TEMOS UMA TABELA COM 16 ITENS,
NÃO HÁ PROBLEMA EM VERIFICAR QUAL CLIENTE ESTÁ SEM REALIZAR UMA COMPRA. MAS IMAGINE ESSA MESMA SITUAÇÃO EM UMA TABELA COM 100000
CLIENTES. É ASSIM QUE O LEFT JOIN SE ENQUADRA.*/

SELECT DISTINCT

	TC.CPF		AS		CPF_CLIENTE,
	TC.NOME		AS		NOME_CLIENTE,
	NF.CPF		AS		CPF_NA_NOTA

FROM TABELA_DE_CLIENTES TC
LEFT JOIN NOTAS_FISCAIS NF
ON TC.CPF = NF.CPF;

/*COM ESTA CONSULTA, TEMOS TODOS OS CLIENTES, MESMO AQUELE QUE NÃO APRESENTA COMPRA ALGUMA. E SE QUISERMOS VERIFICAR SOMENTE ELE,
PODEMOS FAZER UMA FILTRAGEM DA SEGUINTE FORMA*/

SELECT DISTINCT

	TC.CPF		AS		CPF_CLIENTE,
	TC.NOME		AS		NOME_CLIENTE,
	NF.CPF		AS		CPF_NA_NOTA

FROM TABELA_DE_CLIENTES TC
LEFT JOIN NOTAS_FISCAIS NF
ON TC.CPF = NF.CPF
WHERE NF.CPF IS NULL;