UPDATE SUCOS_FRUTAS.DBO.TABELA_DE_PRODUTOS SET PRECO_DE_LISTA = PRECO_DE_LISTA * 1.20

UPDATE PROD_VENDAS_SUCOS SET PROD_VENDAS_SUCOS.PRECO_LISTA = PROD_SUCOS_FRUTAS.PRECO_DE_LISTA
FROM PRODUTOS PROD_VENDAS_SUCOS
INNER JOIN SUCOS_FRUTAS.DBO.TABELA_DE_PRODUTOS PROD_SUCOS_FRUTAS
ON PROD_VENDAS_SUCOS.CODIGO = PROD_SUCOS_FRUTAS.CODIGO_DO_PRODUTO

/*ESTE FOI O COMANDO USADO ANTERIORMENTE PARA FAZER A ALTERAÇÃO DOS PREÇOS DE PRODUTOS DA TABELA 'PRODUTOS' (VENDAS_SUCOS), USANDO COMO BASE A TABELA
'TABELA_DE_PRODUTOS' (SUCOS_FRUTAS). ESSA MESMA ALTERAÇÃO PODE SER FEITA COM O COMANDO 'MERGE', QUE NORMALMENTE É MAIS USADO NESSES CASOS POIS FOI CRIADO
JUSTAMENTE PARA TRAZER DADOS DE UMA TABELA PARA OUTRA. FICARIA DA SEGUINTE FORMA:*/

MERGE INTO VENDAS_SUCOS.DBO.PRODUTOS VS_PRODUTOS --DEFINIMOS A TABELA QUE SERÁ ALTERADA
USING SUCOS_FRUTAS.DBO.TABELA_DE_PRODUTOS SF_PRODUTOS --DEFINIMOS A TABELA QUE SERVIRÁ DE BASE PARA ALTERAÇÃO
ON VS_PRODUTOS.CODIGO = SF_PRODUTOS.CODIGO_DO_PRODUTO --PASSAMOS OS CAMPOS DA TABELA QUE FARA O 'JOIN' ENTRE AMBAS
WHEN MATCHED THEN --AQUI, DEFINIMOS QUE O PRÓXIMO COMANDO SERÁ EXECUTADO QUANDO OS VALORES NO 'JOIN' ANTERIOR FOREM IGUAIS NAS TABELAS 
UPDATE SET VS_PRODUTOS.PRECO_LISTA = SF_PRODUTOS.PRECO_DE_LISTA; --E POR FIM, É PASSADO O VALOR DE ALTERAÇÃO

--UM DETALHE IMPORTANTE, O COMANDO MERGE EXIGE QUE SEJA ENCERRADO COM PONTO E VÍRGULA.

/*ATIVIDADE:
AUMENTAR EM 30% O VOLUME DE COMPRA DOS CLIENTES CUJO BAIRRO SEJA EQUIVALENTE AO BAIRRO DE ALGUM DOS VENDEDORES
*/

MERGE INTO CLIENTES
USING VENDEDORES
ON VENDEDORES.BAIRRO = CLIENTES.BAIRRO
WHEN MATCHED THEN
UPDATE SET CLIENTES.VOLUME_COMPRA = CLIENTES.VOLUME_COMPRA * 1.30;