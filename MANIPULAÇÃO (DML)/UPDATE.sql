/*A ALTERAÇÃO DE CAMPOS NO SQL É NORMALMENTE FEITA ATRAVÉS DO COMANDO UPDATE, QUE É FEITO DA SEGUINTE FORMA:*/

UPDATE PRODUTOS SET PRECO_LISTA = 5 WHERE CODIGO = '1040107'

/*FAZEMOS A DECLARAÇÃO DO COMANDO COM O 'UPDATE', SEGUIDO DO NOME DA TABELA EM QUE O VALOR SERÁ ALTERADO. DEPOIS, TEMOS O COMANDO 'SET', PARA DEFINIR O
NOVO VALOR, SEGUIDO DO NOME DO CAMPO EM QUE O VALOR IRÁ MUDAR. AGORA, A PARTE MAIS IMPORTANTE DO COMANDO, QUE É O WHERE, ISSO PORQUE, CASO NÃO TENHA UM
FILTRO NO	'WHERE' QUE IRÁ MOSTRAR EXATAMENTE AQUILO QUE VOCÊ DESEJA MUDAR, VALORES INDESEJADOS IRÃO SOFRER ALTERAÇÕES.
TOMANDO DE EXEMPLO ESTE COMANDO ACIMA, CASO NÃO HAVA O 'WHERE', O PRECO DE TODOS OS PRODUTOS DA TABELA DE PRODUTOS SE TORNARÃO 5.*/

--ALTERAR O VALOR DOS PRODUTOS DE SABOR MANGA PARA UM AUMENTO DE 10%

UPDATE PRODUTOS SET PRECO_LISTA = PRECO_LISTA * 1.10 WHERE SABOR = 'MANGA'

/*UPDATE TAMBÉM PODE SER USADO EM CONJUNTO COM OUTRAS FUNÇÕES, COMO POR EXEMPLO A FUNÇÃO 'REPLACE'. ESTA FUNÇÃO CRIA UMA NOVA COLUNA QUE MOSTRA OS DADOS
ALTERADOS DE UMA OUTRA, COMO NO EXEMPLO A SEGUIR, ALTERANDO O VALOR DE 350 ml para 550 ml:*/

SELECT DESCRITOR, REPLACE(DESCRITOR, '350 ml', '550 ml') FROM PRODUTOS

--AGORA, USANDO ESSE RESULTADO PARA FAZER A ALTERAÇÃO

UPDATE PRODUTOS SET DESCRITOR = REPLACE(DESCRITOR, '350ml', '550 ml'), --PODEMOS FAZER A ALTERAÇÃO EM MAIS DE UM CAMPO, COMO FOI O CASO
					TAMANHO = '550 ml'
WHERE TAMANHO = '350 ml' OR TAMANHO = '350ml' OR TAMANHO = '550	ml'

SELECT DESCRITOR, TAMANHO FROM PRODUTOS WHERE TAMANHO = '550 ml'

/*MODIFICANDO OS DADOS DE ENDEREÇO DE UM CLIENTE*/

SELECT * FROM CLIENTES WHERE CLIENTES.CPF = '19290992743'

UPDATE CLIENTES SET ENDERECO	= 'R. Jorge Emilio 23',
					BAIRRO		= 'Santo Amaro',
					CIDADE		= 'São Paulo',
					ESTADO		= 'SP',
					CEP			= '8833223'
WHERE
	CLIENTES.CPF = '19290992743'

--AUMENTANDO O VOLUME DE COMPRA DOS CLIENTES DO RIO DE JANEIRO EM 20%

SELECT * FROM CLIENTES WHERE ESTADO = 'RJ'

UPDATE CLIENTES SET VOLUME_COMPRA = VOLUME_COMPRA * 1.2 WHERE ESTADO = 'RJ'

--ALTERANDO UMA TABELA COM BASE NOS VALORES DE OUTRA TABELA

/*É POSSÍVEL USAR O UPDATE JUNTAMENTE DO FROM E JOINS PARA FAZER A ALTERAÇÃO EM UM CAMPO DE UMA TABELA PARA QUE FIQUE SEMELHANTE AO CAMPO DE OUTRA.
NESSE CASO, IREMOS FAZER ISSO DE FORMA QUE O CAMPO 'PRECO_LISTA' DA TABELA 'PRODUTOS, 'VENDAS_SUCOS', FIQUE IGUAL AO CAMPO 'PRECO_DE_LISTA' DA TABELA
'TABELA_DE_PRODUTOS', SUCOS_FRUTAS.
COM A CONSULTA ABAIXO, CONSEGUIMOS VISUALIZAR A DIFERENÇA ENTRE OS VALORES DAS TABELAS, MAS TAMBÉM CONSEGUIMOS UTILIZAR O FROM E O JOIN NO UPDATE PARA
ALTERAR A TABELA QUE QUEREMOS*/

SELECT

	PROD_VENDAS_SUCOS.CODIGO,
	PROD_VENDAS_SUCOS.PRECO_LISTA		AS PRECO_TABELA_DESTINO,
	PROD_SUCOS_FRUTAS.PRECO_DE_LISTA	AS PRECO_TABELA_ORIGEM

FROM PRODUTOS PROD_VENDAS_SUCOS
INNER JOIN SUCOS_FRUTAS.DBO.TABELA_DE_PRODUTOS PROD_SUCOS_FRUTAS
ON PROD_VENDAS_SUCOS.CODIGO = PROD_SUCOS_FRUTAS.CODIGO_DO_PRODUTO

--O SEGUINTE COMANDO É USADO PARA A ALTERAÇÃO

UPDATE PROD_VENDAS_SUCOS SET PROD_VENDAS_SUCOS.PRECO_LISTA = PROD_SUCOS_FRUTAS.PRECO_DE_LISTA
FROM PRODUTOS PROD_VENDAS_SUCOS
INNER JOIN SUCOS_FRUTAS.DBO.TABELA_DE_PRODUTOS PROD_SUCOS_FRUTAS
ON PROD_VENDAS_SUCOS.CODIGO = PROD_SUCOS_FRUTAS.CODIGO_DO_PRODUTO

/*CASO RODARMOS A CONSULTA DE CIMA, VEREMOS QUE AGORA OS PRODUTOS TÊM TODOS OS MESMOS VALORES.
QUANTO A CONSULTA, VEJA QUE NO UPDATE É PASSADO COMO NOME DAS TABELAS OS ALIAS QUE FORAM INFORMADOS NO FROM E JOIN*/