/*STORED PROCEDURES SÃO PROCEDIMENTOS QUE FICAM ARMAZENADOS NUM BANCO DE DADOS DO SQL E FUNCIONAM PARECIDO COM UMA FUNÇÃO, A DIFERENÇA SENDO QUE UMA FUNÇÃO OBRIGATORIAMENTE PRECISA RETORNAR UM VALOR, E 
QUE A PROCEDURE PODE RECEBER COMANDOS MAIS COMPLEXOS, COMO UPDATE, DELETE, ALTER... ALÉM DO MAIS, PODEM SER EXECUTADAS DE MANEIRA INDEPENDENTE*/

/*O COMANDO A SEGUIR É O COMANDO PARA CRIAÇÃO DE UMA PROCEDURE
CREATE PROCEDURE nomeDaProcedure
@variáveis que a procedure recebe, declaradas como um declare
AS
BEGIN
	comandos
END
*/
CREATE PROCEDURE RETORNA_VALORES_FATURAMENTO_QUANTIDADE
@CPF AS VARCHAR(12), @ANO AS INT, @NUM_NOTAS AS INT OUTPUT, @FATURAMENTO AS FLOAT OUTPUT
AS
BEGIN
	SELECT @NUM_NOTAS = COUNT(*) FROM [NOTAS FISCAIS]
	WHERE CPF = @CPF AND YEAR([DATA]) = @ANO

	SELECT @FATURAMENTO = SUM(INF.QUANTIDADE * INF.[PREÇO])
	FROM [ITENS NOTAS FISCAIS] INF
	INNER JOIN [NOTAS FISCAIS] NF
	ON INF.NUMERO = NF.NUMERO
	WHERE NF.CPF = @CPF AND YEAR(NF.[DATA]) = @ANO
END

/*NOTE QUE NA DECLARAÇÃO DE VARIÁVEIS DA PROCEDURE, DUAS DELAS RECEBERAM O COMANDO 'OUTPUT'. ISSO PORQUE EXISTEM DUAS FORMAS DE SE PASSAR UMA VARIÁVEL EM UMA PROCEDURE, SEJA POR VALOR (SEM OUTPUT) OU
POR REFERÊNCIA (COM OUTPUT). A DIFERENÇA ENTRE AS DUAS ESTÁ NO CASO DA VARIÁVEL SER AFETADA DENTRO DA PROCEDURE (REFERÊNCIA) OU NÃO (VALOR). VEJA A SEGUIR:*/

DECLARE @NUM_NOTAS INT
DECLARE @FATURAMENTO FLOAT

SET @NUM_NOTAS = 0
SET @FATURAMENTO = 0

SELECT @NUM_NOTAS, @FATURAMENTO

EXEC RETORNA_VALORES_FATURAMENTO_QUANTIDADE @CPF='19290992743', @ANO=2017, @NUM_NOTAS=@NUM_NOTAS OUTPUT, @FATURAMENTO=@FATURAMENTO OUTPUT

SELECT @NUM_NOTAS, @FATURAMENTO

/*AQUI, DECLARAMOS DUAS VARIÁVEIS QUE SERÃO PASSADAS PARA A FUNÇÃO, @NUM_NOTAS E @FATURAMENTO. SEUS VALORES NÃO IMPORTAM, JÁ QUE OS MESMO SÃO ATRIBUÍDOS DENTRO DA PROCEDURE.
A QUESTÃO É QUE, NO PRIMEIRO SELECT, VEMOS QUE OS VALORES ESTÃO ZERADOS, QUE FOI O QUE FOI DEFINIDO INICIALMENTE, MAS DEPOIS DE EXECUTAR A PROCEDURE, PODEMOS PERCEBER QUE OS VALORES ESTÃO CONFORME FORAM
ALTERADOS DENTRO DELA.

DETALHE IMPORTANTE É QUE, NO MOMENTO DE EXECUTARMOS A PROCEDURE, TAMBÉM É IMPORTANTE DAR O COMANDO OUTPUT PARA DEFINIR SE QUEREMOS PASSAR COMO VALOR OU REFERÊNCIA A VARIÁVEL. CASO NÃO COLOQUE, O VALOR DA 
VARIÁVEL NÃO IRÁ ALTERAR. EXEMPLO:*/

DECLARE @NUM_NOTAS INT
DECLARE @FATURAMENTO FLOAT

SET @NUM_NOTAS = 0
SET @FATURAMENTO = 0

SELECT @NUM_NOTAS, @FATURAMENTO

EXEC RETORNA_VALORES_FATURAMENTO_QUANTIDADE @CPF='19290992743', @ANO=2017, @NUM_NOTAS=@NUM_NOTAS, @FATURAMENTO=@FATURAMENTO

SELECT @NUM_NOTAS, @FATURAMENTO